
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Lock down the entire database by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for user-specific data like native products
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Rules for user-specific Shopify credentials
    match /userShopifyCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Rules for user-specific WooCommerce credentials
    match /userWooCommerceCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Rules for product customization options
    match /userProductOptions/{userId}/products/{productId} {
      // Logged-in users can manage their own product options
      allow read, write: if isOwner(userId);
    }

    // PUBLIC READ for embedded customizer:
    // When the customizer is embedded on a live site, it uses a configUserId.
    // We need to allow anyone to read the options for that specific user's product.
    // Writes are still restricted to the owner.
    match /userProductOptions/{configUserId}/products/{productId} {
       allow get: if true;
    }
  }
}
