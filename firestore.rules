rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can only read their own user document
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if request.auth != null;

      // Users can manage their own native products
      match /products/{productId} {
        allow read, write: if isOwner(userId);
      }
      
      // Users can manage their own product categories
      match /productCategories/{categoryId} {
        allow read, write: if isOwner(userId);
      }
      
      // Users can manage their own orders and customers subcollections
      match /(orders|customers)/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Product options can be read by anyone if they know the path, but only written by the owner
    match /userProductOptions/{userId}/products/{productId} {
      allow read: if true; // Allow public read for customizer
      allow write: if isOwner(userId);
    }

    // Credentials can only be read/written by the owner
    match /userWooCommerceCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }
    match /userShopifyCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }

    // User stores configuration can be read publicly, but only written by the owner
    match /userStores/{storeId} {
      allow read: if true;
      allow write: if isOwner(resource.data.userId);

      // NEW RULE: Allow anyone to READ the approved files for a store
      match /approvedFiles/{fileId} {
        allow read: if true;
        // Only the store owner can write/delete files
        allow write, delete: if isOwner(get(/databases/$(database)/documents/userStores/$(storeId)).data.userId);
      }
    }
  }
}
