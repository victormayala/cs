rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read on store configurations for storefront rendering
    // but only let the authenticated user who owns the document write to it.
    // This rule ensures the 'userId' field in the document matches the creator's UID.
    match /userStores/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId && request.resource.data.userId == request.auth.uid;
    }

    // Allow public read on user products for storefront rendering
    match /users/{userId}/products/{productId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Secure user-specific credentials.
    // ANYONE can read these, as they are used by the public customizer via server-side actions,
    // and are never exposed to the client.
    // ONLY the authenticated owner can write/update them.
    match /userShopifyCredentials/{userId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /userWooCommerceCredentials/{userId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Product options configuration.
    // ANYONE can read these settings (for public storefront plugins).
    // ONLY the authenticated owner can write/update them from the dashboard.
    match /userProductOptions/{userId}/products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
