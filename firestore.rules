rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // USER DATA: Secure user-specific collections
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    // USER PRODUCTS: Products are private to the user in the dashboard,
    // but need to be publicly readable for the store.
    match /users/{userId}/products/{productId} {
      // Owner has full access
      allow read, write, delete: if isOwner(userId);
      // Public can read the product list for stores
      allow get, list: if true;
    }

    // USER CREDENTIALS: Only the owner can ever access their credentials.
    match /userWooCommerceCredentials/{userId} {
      allow read, write, delete: if isOwner(userId);
    }
    match /userShopifyCredentials/{userId} {
      allow read, write, delete: if isOwner(userId);
    }
    match /userProductOptions/{userId}/products/{productId} {
      // Owner has full access to configure their products
      allow read, write, delete: if isOwner(userId);
      // Public can read the options for a product to display on store/customizer
      allow get, list: if true;
    }

    // USER STORES: Public can read, owner can write.
    match /userStores/{storeId} {
      allow read: if true;
      // Write is allowed if user is authenticated and the userId on the document matches their own.
      // This covers both create and update operations.
      allow write: if isOwner(request.resource.data.userId);
    }
    
    // Default deny all other access
    match /{path=**}/documents/{document} {
      allow read, write: if false;
    }
  }
}
