rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Allow public read for stores, but only owner write
    match /userStores/{storeId} {
      allow read: if true;
      allow write: if isOwner(resource.data.userId);
      
      // Subcollection for approved files
      match /approvedFiles/{fileId} {
        allow read: if true; // Allow public read for customizer access
        allow write: if isOwner(get(/databases/$(database)/documents/userStores/$(storeId)).data.userId);
      }
    }

    match /users/{userId} {
      // Allow user to read/write their own document
      allow read, write: if isOwner(userId);
      
      // Allow public read for specific fields needed for checkout
      allow get: if true;

      // Products subcollection
      match /products/{productId} {
        allow read, write: if isOwner(userId);
      }
      
      // Categories subcollection
      match /productCategories/{categoryId} {
        allow read, write: if isOwner(userId);
      }
      
      // Credentials subcollections
      match /userWooCommerceCredentials/{credId} {
        allow read, write: if isOwner(userId);
      }
      match /userShopifyCredentials/{credId} {
         allow read, write: if isOwner(userId);
      }
      
      // Orders and Customers subcollections (private to the merchant)
      match /orders/{orderId} {
        allow read, write: if isOwner(userId);
      }
      match /customers/{customerId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Product options can be read by anyone (for the public customizer)
    // but only written to by the owner.
    match /userProductOptions/{userId}/products/{productId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
  }
}
