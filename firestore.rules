rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Lock down all access by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to manage their own credentials
    match /userWooCommerceCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /userShopifyCredentials/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Allow users to manage their own native products
    match /users/{userId}/products/{productId} {
        allow read, write: if isOwner(userId);
    }

    // Product options can be read publicly if needed by an external plugin (using configUserId),
    // OR they can be read and written to by the owner of the options.
    match /userProductOptions/{userId}/products/{productId} {
      // Allow owner to read and write their own product options
      allow read, write: if isOwner(userId);

      // Also allow public read access (e.g., for the WP plugin or embedded customizer)
      // This uses 'get' instead of 'read' to make it an independent rule.
      allow get: if true;
    }
  }
}
