
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and update their own user document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to manage their own subcollections.
      match /products/{productId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /orders/{orderId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /customers/{customerId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
       match /productCategories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Product options can be read publicly (needed for customizer tool),
    // but only the owner can write to them.
    match /userProductOptions/{userId}/{document=**} {
       allow read: if true;
       allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User credentials can only be accessed by the owner.
    match /userShopifyCredentials/{userId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /userWooCommerceCredentials/{userId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // User-generated stores can be read publicly (for the storefronts to work),
    // but only the owner can create, update, or delete them.
    match /userStores/{storeId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
